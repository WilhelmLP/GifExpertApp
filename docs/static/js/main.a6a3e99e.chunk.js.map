{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","Components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAGDJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKd,SACE,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBgB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECLwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAASC,GACJwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAEZ,CAACpB,IAEGqB,EDbwBM,CAAc3B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEStBiB,EA1BM,WAEjB,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,eAAC,WAAD,WAEA,+CACA,cAAC,EAAD,CACIA,cAAeA,IAEnB,uBAEA,6BACK4C,EAAWpB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADHA,Y,MCd3B8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a6a3e99e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      //ValidaciÃ³n en el submit para que no haya vacio o null\r\n    if(inputValue.trim().length > 2 ){\r\n      setCategories(cats => [ inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n            type=\"text\" \r\n            value={inputValue} \r\n            onChange={handleInputChange} \r\n        />\r\n      </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=Rr2CoVmweoYG9cVdhhH6Ybn6p9IySvyv&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    }) \r\n\r\n    return gifs;\r\n}\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return ( \r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {useFetchGifs} from '../Hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                } \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../Helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    }) \r\n                }, 1000);\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n\r\n\r\n","import React, {Fragment, useState} from 'react'\r\nimport AddCategory from './AddCategory';\r\nimport {GifGrid} from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Naruto'])\r\n\r\n    return ( \r\n        <Fragment>\r\n\r\n        <h2>GiftExpertApp</h2>\r\n        <AddCategory \r\n            setCategories={setCategories}\r\n        />\r\n        <hr/>\r\n\r\n        <ol>\r\n            {categories.map(category => \r\n                <GifGrid \r\n                    key = {category}\r\n                    category={category}\r\n                />\r\n            )}\r\n        </ol>\r\n\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './Components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}